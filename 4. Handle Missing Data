# Following File covers how to fill missing data in csv file
============================================================================
# Read whether data from csv file
import pandas as pd
df = pd.read_csv("C:\Users\Sairampc\Desktop\Pandas\WhetherData.csv")
df

output :

day	temperature	windSpeed	event
0	01-01-2017	32.0	6.0	Rain
1	01-04-2017	NaN	9.0	Sunny
2	01-05-2017	28.0	NaN	Snow
3	01-06-2017	NaN	7.0	NaN
4	01-07-2017	32.0	NaN	Rain
5	01-08-2017	NaN	NaN	Sunny
6	01-09-2017	NaN	NaN	NaN
7	01-10-2017	34.0	8.0	Cloudy
8	01-11-2017	40.0	12.0	Sunny

============================================================================
1. Get Data Type of day
-------------------------
type("df.day") # output : str
============================================================================
2. Change dataType of Day to Date
----------------------------------
df2 = pd.read_csv("C:\Users\Sairampc\Desktop\Pandas\WhetherData.csv", parse_dates=["day"])
df2
#type(df2.day[0]) --> pandas._libs.tslibs.timestamps.Timestamp # is required when method in interpolate is "time"
#df2.shape
============================================================================
3. set Day as Index
------------------------
df2.set_index("day",inplace=True)
df2
#df2.shape

output :
	temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	NaN	9.0	Sunny
2017-01-05	28.0	NaN	Snow
2017-01-06	NaN	7.0	NaN
2017-01-07	32.0	NaN	Rain
2017-01-08	NaN	NaN	Sunny
2017-01-09	NaN	NaN	NaN
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
============================================================================
4. Fill NaN with 0 Using fillna() method 
-------------------------------------------
NewDf = df2.fillna(0)
NewDf

output:
	temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	0.0	9.0	Sunny
2017-01-05	28.0	0.0	Snow
2017-01-06	0.0	7.0	0
2017-01-07	32.0	0.0	Rain
2017-01-08	0.0	0.0	Sunny
2017-01-09	0.0	0.0	0
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
============================================================================

5. For Temperatur and windSpeed replace nan with 0 for event replace with 
no event
----------------------------------------------------------------------------
NewDf = df2.fillna({
    'temperature':0,
    'windSpeed':0,
    'event':"no event"
})
NewDf

output: 
	temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	0.0	9.0	Sunny
2017-01-05	28.0	0.0	Snow
2017-01-06	0.0	7.0	no event
2017-01-07	32.0	0.0	Rain
2017-01-08	0.0	0.0	Sunny
2017-01-09	0.0	0.0	no event
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
============================================================================
6. Instead of replacing NaN with 0 replace them with value above that column
----------------------------------------------------------------------------
NewDf = df2.fillna(method='ffill') #Use forward fill method 
NewDf

output:

temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	32.0	9.0	Sunny
2017-01-05	28.0	9.0	Snow
2017-01-06	28.0	7.0	Snow
2017-01-07	32.0	7.0	Rain
2017-01-08	32.0	7.0	Sunny
2017-01-09	32.0	7.0	Sunny
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
============================================================================
7. Copy Values Horizontaly 
---------------------------
NewDf = df2.fillna(method='bfill',axis=1) #axis=0 be default axis = 0 
NewDf

output : 
	temperature	windSpeed	event
day			
2017-01-01	32	6	Rain
2017-01-04	9	9	Sunny
2017-01-05	28	Snow	Snow
2017-01-06	7	7	NaN
2017-01-07	32	Rain	Rain
2017-01-08	Sunny	Sunny	Sunny
2017-01-09	NaN	NaN	NaN
2017-01-10	34	8	Cloudy
2017-01-11	40	12	Sunny
============================================================================
8. Instead of copying 7.0 to 1/7 , 1/8 & 1/9 copy to 1 row only(to: 1/7/19)
---------------------------------------------------------------------------
NewDf = df2.fillna(method='ffill',limit=1) #limit = 5 will fill all three Nan of 1/7, 1/8 and 1/9
NewDf

output:

temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	32.0	9.0	Sunny
2017-01-05	28.0	9.0	Snow
2017-01-06	28.0	7.0	Snow
2017-01-07	32.0	7.0	Rain
2017-01-08	32.0	NaN	Sunny
2017-01-09	NaN	NaN	Sunny
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
============================================================================
9. Instead of copying data try to replace them with most estimate values
-------------------------------------------------------------------------
# Use interploate method
NewDf = df2.interpolate() #check documentation
NewDf

output:
	temperature	windSpeed	event
day			
2017-01-01	32.000000	6.00	Rain
2017-01-04	30.000000	9.00	Sunny
2017-01-05	28.000000	8.00	Snow
2017-01-06	30.000000	7.00	NaN
2017-01-07	32.000000	7.25	Rain
2017-01-08	32.666667	7.50	Sunny
2017-01-09	33.333333	7.75	NaN
2017-01-10	34.000000	8.00	Cloudy
2017-01-11	40.000000	12.00	Sunny
============================================================================
10. By default method in interpolate = liner so its using leaner 
interpolation method Here now use time interpolation method 
-----------------------------------------------------------------
NewDf = df2.interpolate(method="time")
NewDf

output:

temperature	windSpeed	event
day			
2017-01-01	32.000000	6.00	Rain
2017-01-04	29.000000	9.00	Sunny
2017-01-05	28.000000	8.00	Snow
2017-01-06	30.000000	7.00	NaN
2017-01-07	32.000000	7.25	Rain
2017-01-08	32.666667	7.50	Sunny
2017-01-09	33.333333	7.75	NaN
2017-01-10	34.000000	8.00	Cloudy
2017-01-11	40.000000	12.00	Sunny
============================================================================
11.Drop all rows which consist of NaN
-----------------------------------------
NewDf = df2.dropna()
NewDf

output:
	temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny

============================================================================
12. Drop only row whose all values are NaN for example 2017-01-09 as it has
all values NaN
# a.) Using how method
-----------------------------
NewDf = df2.dropna(how="all")
NewDf

output:
	temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	NaN	9.0	Sunny
2017-01-05	28.0	NaN	Snow
2017-01-06	NaN	7.0	NaN
2017-01-07	32.0	NaN	Rain
2017-01-08	NaN	NaN	Sunny
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
---------------------------------------
# b.) using threshold method
---------------------------------------
NewDf = df2.dropna(thresh=1)
NewDf

output:

temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	NaN	9.0	Sunny
2017-01-05	28.0	NaN	Snow
2017-01-06	NaN	7.0	NaN
2017-01-07	32.0	NaN	Rain
2017-01-08	NaN	NaN	Sunny
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
============================================================================
13. Drop row who has atleast two NaN
-------------------------------------
NewDf = df2.dropna(thresh=2)
NewDf

output:
temperature	windSpeed	event
day			
2017-01-01	32.0	6.0	Rain
2017-01-04	NaN	9.0	Sunny
2017-01-05	28.0	NaN	Snow
2017-01-07	32.0	NaN	Rain
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny
============================================================================
14. Insert Missing Date's for example 01/02, 01/03
--------------------------------------------------
dt  = pd.date_range("2017-01-01","2017-01-11")
idx = pd.DatetimeIndex(dt)
#idx
# Do re indexing
df2  = df2.reindex(idx)
df2

output:

temperature	windSpeed	event
2017-01-01	32.0	6.0	Rain
2017-01-02	NaN	NaN	NaN
2017-01-03	NaN	NaN	NaN
2017-01-04	NaN	9.0	Sunny
2017-01-05	28.0	NaN	Snow
2017-01-06	NaN	7.0	NaN
2017-01-07	32.0	NaN	Rain
2017-01-08	NaN	NaN	Sunny
2017-01-09	NaN	NaN	NaN
2017-01-10	34.0	8.0	Cloudy
2017-01-11	40.0	12.0	Sunny

============================================================================
15. Use time interpolate to fill missing data & write to New CSV File
----------------------------------------------------------------------
NewDf = df2.interpolate(method='time')
NewDf

output:
	temperature	windSpeed	event
2017-01-01	32.000000	6.00	Rain
2017-01-02	31.000000	7.00	NaN
2017-01-03	30.000000	8.00	NaN
2017-01-04	29.000000	9.00	Sunny
2017-01-05	28.000000	8.00	Snow
2017-01-06	30.000000	7.00	NaN
2017-01-07	32.000000	7.25	Rain
2017-01-08	32.666667	7.50	Sunny
2017-01-09	33.333333	7.75	NaN
2017-01-10	34.000000	8.00	Cloudy
2017-01-11	40.000000	12.00	Sunny


# Writing to New CSV File
NewDf.to_csv("C:\Users\Sairampc\Desktop\Pandas\WhetehrData2.csv")
============================================================================
